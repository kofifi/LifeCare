@model LifeCare.ViewModels.HabitVM
@await Html.PartialAsync("_CategoryModal")

@{
    ViewData["Title"] = "Dodaj nawyk";
    var categories = ViewBag.Categories as List<LifeCare.Models.Category>;
}

<h2 class="mb-4">Dodaj nawyk</h2>

<form asp-action="Create" method="post">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

    <div class="mb-3">
        <label asp-for="Name" class="form-label"></label>
        <input asp-for="Name" class="form-control"/>
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="mb-3" id="descriptionWrapper" style="display: none;">
        <label asp-for="Description" class="form-label"></label>
        <textarea asp-for="Description" class="form-control" rows="3"></textarea>
    </div>

    <button type="button" class="btn btn-sm btn-outline-secondary mb-3" id="toggleDescription">
        <i class="fa fa-plus"></i> Dodaj opis
    </button>

    <div class="mb-3">
        <label asp-for="Color" class="form-label">Kolor</label>
        <input asp-for="Color" type="color" class="form-control form-control-color"/>
    </div>

    <div class="mb-3">
        <label asp-for="Icon" class="form-label">Ikona</label>
        <select asp-for="Icon" class="form-select">
            <option value="fa-heart">❤️ fa-heart</option>
            <option value="fa-book">📘 fa-book</option>
            <option value="fa-dumbbell">🏋️ fa-dumbbell</option>
            <option value="fa-seedling">🌱 fa-seedling</option>
        </select>
    </div>

    <div class="mb-3">
        <label asp-for="Type" class="form-label">Typ</label>
        <select asp-for="Type" class="form-select" id="habitType">
            <option value="0">Checkbox</option>
            <option value="1">Quantity</option>
        </select>
    </div>

    <div class="mb-3" id="quantityFields" style="display: none;">
        <label asp-for="TargetQuantity" class="form-label">Docelowa ilość</label>
        <input asp-for="TargetQuantity" class="form-control" placeholder="np. 50"/>

        <label asp-for="Unit" class="form-label mt-2">Jednostka</label>
        <input asp-for="Unit" class="form-control" placeholder="np. strony, minuty"/>
    </div>


    <div class="mb-3">
        <label asp-for="CategoryId" class="form-label">Kategoria</label>
        <div class="input-group">
            <select asp-for="CategoryId" class="form-select" id="categorySelect">
                <option value="">Brak</option>
                @if (categories != null)
                {
                    foreach (var category in categories)
                    {
                        <option value="@category.Id">@category.Name</option>
                    }
                }
            </select>
            <button type="button" class="btn btn-sm btn-outline-secondary ms-2" data-bs-toggle="modal" data-bs-target="#categoryModal">
                <i class="fa fa-plus"></i> Nowa
            </button>
        </div>
    </div>

    <button type="submit" class="btn btn-primary">Zapisz</button>
    <a asp-action="Index" class="btn btn-secondary">Anuluj</a>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script>
        document.getElementById('habitType').addEventListener('change', function () {
            const show = this.value === '1';
            document.getElementById('quantityFields').style.display = show ? 'block' : 'none';
        });

        document.getElementById('toggleDescription').addEventListener('click', function () {
            const desc = document.getElementById('descriptionWrapper');
            const isVisible = desc.style.display !== 'none';
            desc.style.display = isVisible ? 'none' : 'block';
            this.innerHTML = isVisible ? '<i class="fa fa-plus"></i> Dodaj opis' : '<i class="fa fa-minus"></i> Ukryj opis';
        });
        
        document.getElementById("categoryForm").addEventListener("submit", async function (e) {
            e.preventDefault();
            const name = document.getElementById("categoryName").value;
            const color = document.getElementById("categoryColor").value;
            const icon = document.getElementById("categoryIcon").value;

            const response = await fetch('/Category/CreateAjax', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ name, color, icon })
            });

            if (response.ok) {
                const category = await response.json();
                const select = document.querySelector("select[name='CategoryId']");
                const option = document.createElement("option");
                option.value = category.id;
                option.text = category.name;
                option.selected = true;
                select.appendChild(option);
                bootstrap.Modal.getInstance(document.getElementById("categoryModal")).hide();
                this.reset();
            } else {
                alert("Błąd podczas dodawania kategorii");
            }
        });

        let selectedIcon = null;
        document.querySelectorAll(".icon-btn").forEach(btn => {
            btn.addEventListener("click", () => {
                selectedIcon = btn.dataset.icon;
                document.getElementById("categoryIcon").value = selectedIcon;

                // Podświetl wybraną ikonę
                document.querySelectorAll(".icon-btn").forEach(b => b.classList.remove("btn-primary"));
                btn.classList.add("btn-primary");
            });
        });

    </script>

}